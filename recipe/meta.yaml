{% set version = "7.3.0" %}

# handle undefined PYTHON in `noarch: generic` packages
{% if PYTHON is undefined %}{% set PYTHON = "$PYTHON" %}{% endif %}

package:
  name: smart_open
  version: {{ version }}

source:
  - folder: dist
    url: https://pypi.org/packages/source/s/smart_open/smart_open-{{ version }}.tar.gz
    sha256: 4c4b0164738212dfe7e352bf16e1b0dbf98038666f04495c681f583a7bb05166
  - folder: src
    url: https://github.com/RaRe-Technologies/smart_open/archive/refs/tags/v{{ version }}.tar.gz
    sha256: 90dbf36a4c496df77ef8009c16c88a3e4e9c52543abd5a2fcda58bb0e4b0799d

build:
  number: 0
  noarch: python
  script:
    - cd dist && {{ PYTHON }} -m pip install . --no-deps -vv --no-build-isolation

requirements:
  host:
    - pip
    - python {{ python_min }}
    - setuptools
    - wheel
  run:
    - python >={{ python_min }}
    - wrapt
test:
  imports:
    - smart_open
  requires:
    - pip
    - python {{ python_min }}
  commands:
    - pip check

outputs:
  # the actual package
  - name: smart_open

  # the kitchen sink with tests
  - name: smart-open-with-all
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("smart_open", exact=True) }}
        - {{ pin_subpackage("smart-open-with-azure", exact=True) }}
        - {{ pin_subpackage("smart-open-with-gcs", exact=True) }}
        - {{ pin_subpackage("smart-open-with-http", exact=True) }}
        - {{ pin_subpackage("smart-open-with-s3", exact=True) }}
        - {{ pin_subpackage("smart-open-with-ssh", exact=True) }}
        - {{ pin_subpackage("smart-open-with-webhdfs", exact=True) }}
        - {{ pin_subpackage("smart-open-with-zst", exact=True) }}
    test:
      source_files:
        - src/smart_open/tests
      files:
        - hotfix_tests.py
      requires:
        - coverage
        - moto
        - pip
        - pytest
        - pytest-benchmark
        - pytest-rerunfailures
        - responses
      commands:
        - pip check
        # tests reference `smart_open.tests`, but not included in distributions
        - python hotfix_tests.py
        - coverage run --source=smart_open --branch -m pytest src/tests -vv --tb=long --color=yes -k "not ( http_gz or http_gz_query or https_seek_forward or s3_disable_compression or s3_gzip_compress_sanity or s3_read_explicit or s3_write_explicit or s3_write_implicit or seek_from_current or seek_from_end or
          seek_from_start )"
        - coverage report --show-missing --skip-covered --fail-under=35

  # the normalized hyphen-convention package
  - name: smart-open
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("smart_open", exact=True) }}
    test:
      imports:
        - smart_open

  # extras from here on out
  - name: smart-open-with-azure
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("smart_open", exact=True) }}
        - azure-common
        - azure-core
        - azure-storage-blob
    test:
      imports:
        - smart_open.azure
      requires:
        - pip
      commands:
        - pip check

  - name: smart-open-with-gcs
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("smart_open", exact=True) }}
        - google-cloud-storage >=2.6.0
    test:
      imports:
        - smart_open.gcs
      requires:
        - pip
      commands:
        - pip check

  - name: smart-open-with-http
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("smart_open", exact=True) }}
        - requests
    test:
      imports:
        - smart_open.http
      requires:
        - pip
      commands:
        - pip check

  - name: smart-open-with-s3
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("smart_open", exact=True) }}
        - boto3
    test:
      imports:
        - smart_open.s3
      requires:
        - pip
      commands:
        - pip check

  - name: smart-open-with-ssh
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("smart_open", exact=True) }}
        - paramiko
    test:
      imports:
        - smart_open.ssh
      requires:
        - pip
      commands:
        - pip check

  - name: smart-open-with-webhdfs
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("smart_open", exact=True) }}
        - requests
    test:
      imports:
        - smart_open.webhdfs
      requires:
        - pip
      commands:
        - pip check

  - name: smart-open-with-zst
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("smart_open", exact=True) }}
        - zstandard
    test:
      requires:
        - pip
      commands:
        - pip check

about:
  home: https://github.com/RaRe-Technologies/smart_open
  license: MIT
  license_family: MIT
  license_file: dist/LICENSE
  summary: Python library for efficient streaming of large files

  description: |
    smart_open is a Python 3 library
    for efficient streaming of very large files
    from/to S3, HDFS, WebHDFS or local (compressed) files.
  dev_url: https://github.com/RaRe-Technologies/smart_open

extra:
  feedstock-name: smart_open
  recipe-maintainers:
    - timkpaine
    - souravsingh
    - mpenkov
    - bollwyvl
